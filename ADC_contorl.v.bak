//======================================================|
//Name     : ADC controll                              =|
//Describe : verilog code for AD7352                   =|
//           operate with 1.5MHz(CS), Sclk = 25MHz     =|                                            =|
//======================================================|

module ADC_contorl(

	input clk, reset, data_in, // data_in : data from ADC to FPGA
	output reg CS, Sclk,
	output reg[11:0] Data_out
);
reg [5:0] counter;
reg [11:0] Data_reg;
//===========================================================
always @(posedge clk)
	begin
	if (!reset) 
		begin
		counter = 6'b000000;
		Sclk <= 0;
		CS <= 0;
		end
	else 
		begin
		counter <= counter + 1;
		if (counter <  6) CS <= 1;
		else if (counter == 6) begin Sclk <= 1; CS <= 0;end // Setup time
		else if (counter == 8) Sclk <= 1; // pulse 1
		else if (counter == 10) Sclk <= 1; // pulse 2
		else if (counter == 12) Sclk <= 1; // pulse 3
		else if (counter == 14) Sclk <= 1; // pulse 4
		else if (counter == 16) Sclk <= 1; // pulse 5
		else if (counter == 18) Sclk <= 1; // pulse 6
		else if (counter == 20) Sclk <= 1; // pulse 7
		else if (counter == 22) Sclk <= 1; // pulse 8
		else if (counter == 24) Sclk <= 1; // pulse 9
		else if (counter == 26) Sclk <= 1; // pulse 10
		else if (counter == 28) Sclk <= 1; // pulse 11
		else if (counter == 30) Sclk <= 1; // pulse 12
		else if (counter == 32) Sclk <= 1; // pulse 13
		else 
			begin
			Sclk <= 0;
			CS <= 0;
			end
		if (counter == 35) counter <= 0; 
		end
	end
	
//===========================================================
always @ (posedge Sclk)
	begin 
	Data_reg <= {Data_reg [10:0], data_in};
	end
	
//===========================================================
always @ (posedge CS)
	begin
	Data_out [11:0] <= Data_reg [11:0];
	end
	
endmodule
